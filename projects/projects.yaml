#############
# Ratathune #
#############
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ratathune
  namespace: services
spec:
  project: default
  source:
    repoURL: 'https://github.com/Courtcircuits/cluster'
    path: projects/ratathune/
    targetRevision: HEAD
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: services
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
################
# Cert-manager #
################
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: services
spec:
  project: infrastructure
  source:
    repoURL: 'https://github.com/Courtcircuits/cluster'
    path: projects/cert-manager
    targetRevision: HEAD
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: services
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
##################
# Hack the Crous #
##################
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: hackthecrous
  namespace: services
spec:
  project: default
  source:
    repoURL: 'https://github.com/Courtcircuits/cluster'
    path: projects/hackthecrous
    targetRevision: HEAD
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: services
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: dataviz
  namespace: services
spec:
  clusterResourceWhitelist:
  - group: '*'
    kind: '*'
  description: Project for the dataviz application
  destinations:
  - namespace: '*'
    server: '*'
  namespaceResourceWhitelist:
  - group: '*'
    kind: '*'
  orphanedResources:
    warn: true
  sourceRepos:
    - '*'
---
###########
# Dataviz #
###########
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: dataviz
  namespace: services
spec:
  project: dataviz
  source:
    repoURL: 'https://github.com/Courtcircuits/cluster'
    path: projects/spotify-dataviz
    targetRevision: HEAD
    helm:
      valueFiles:
        - values.yaml
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: dataviz
  syncPolicy:
    automated:
      prune: true
      selfHeal: true